// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Submission    Submission[]
  createdAt     DateTime     @default(now())
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id         String       @id @default(cuid())
  name       String
  sector     String
  Submission Submission[]
  createdAt  DateTime     @default(now())
  url        String
}

model Submission {
  id                        String   @id @default(cuid())
  createdAt                 DateTime @default(now())
  user                      User     @relation(fields: [userId], references: [id])
  userId                    String
  company                   Company  @relation(fields: [companyId], references: [id])
  companyId                 String
  foundingTeamQualification String
  proprietary               String
  missionCritical           String
  relevantExperience        String
  additionalNotes           String   @default("No notes")
  pocEmail                  String   @default("thexudavid@gmail.com")
  pocLinkedin               String   @default("https://www.linkedin.com/in/david-xu2/")
}

model Message {
  id             String @id @default(cuid())
  header         String @default("Headline")
  welcomeMessage String
  sentMonth      String
  sentDate       String
}

model ReviewThese {
  id          String @id @default(cuid())
  companyName String
  industry    String
  url         String @default("linkedin.com")
}

model statsDashboard {
  id                     String @id @default(cuid())
  totalViableSources     String
  totalComp              String
  percentileSourcers     String
  totalCompaniesReviewed String
}

model venmoInfo {
  id                     String @id @default(cuid())
  bestEmail              String
  venmoUsername          String
}
